/** @page Building Building %DarkHelp

@section Windows

The Windows build uses @p vcpkg to install the necessary 3rd-party libraries such as OpenCV.

See the files
<a target="_blank" href="https://github.com/stephanecharette/DarkHelp/blob/master/readme_windows.txt">readme_windows.txt</a> and
<a target="_blank" href="https://github.com/stephanecharette/DarkHelp/blob/master/build_windows.cmd">build_windows.cmd</a> on GitHub for details.

The Darknet/OpenCV portion is like this:

~~~~{.sh}
cd c:\src
git clone https://github.com/microsoft/vcpkg
cd vcpkg
bootstrap-vcpkg.bat
vcpkg.exe integrate install
vcpkg.exe integrate powershell
vcpkg.exe install opencv[contrib,core,dnn,ffmpeg,jpeg,png,quirc,tiff,webp]:x64-windows darknet[opencv-base]:x64-windows
~~~~

Once that completes, the %DarkHelp portion is like this:

~~~~{.sh}
cd c:\src\vcpkg
vcpkg.exe install tclap:x64-windows
cd c:\src
git clone https://github.com/stephanecharette/DarkHelp.git
cd darkhelp
mkdir build
cd build
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=C:/src/vcpkg/scripts/buildsystems/vcpkg.cmake ..
msbuild.exe /property:Platform=x64;Configuration=Release /target:Build -maxCpuCount -verbosity:normal -detailedSummary DarkHelp.sln
msbuild.exe /property:Platform=x64;Configuration=Release PACKAGE.vcxproj
~~~~

Make sure you update the path to the toolchain file if you used a different directory.

@section Linux

Extremely simple tutorial on how to build Darknet, %DarkHelp, and <a target="_blank" href="https://github.com/stephanecharette/DarkMark">DarkMark</a>:

@htmlonly[block]
<iframe width="560" height="315" src="https://www.youtube.com/embed/pJ2iyf_E9PM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
@endhtmlonly

Building both Darknet and %DarkHelp should not take more than 5 minutes combined.  If you have not already done so, you must first build Darknet with the flag @p LIBSO=1.  This will ensure you build the @p "libdarknet.so" dynamic library.

Once Darknet has built, remember to copy the library and header file to a location where %DarkHelp and other applications can find them.  For example:

~~~~{.sh}
sudo apt-get install build-essential git libopencv-dev
cd ~/src/
git clone https://github.com/AlexeyAB/darknet.git
cd darknet
vi Makefile # to set LIBSO=1, and possibly other flags
make
sudo cp libdarknet.so /usr/local/lib/
sudo cp include/darknet.h /usr/local/include/
sudo ldconfig
~~~~

For additional details on building Darknet, see this tutorial:  <a target="_blank" href="https://www.ccoderun.ca/programming/2019-08-18_Installing_and_building_Darknet/">https://www.ccoderun.ca/programming/2019-08-18_Installing_and_building_Darknet/</a>.

Now that Darknet is built, <a target="_blank" href="https://github.com/stephanecharette/DarkHelp/">download the source code to %DarkHelp</a> and build like this:

~~~~{.sh}
sudo apt-get install cmake build-essential libtclap-dev libmagic-dev libopencv-dev
cd ~/src/
git clone https://github.com/stephanecharette/DarkHelp.git
cd DarkHelp
mkdir build
cd build
cmake -DCMAKE_BUILD_TYPE=Release ..
make
make package
~~~~

@section BuildingDoxygen Doxygen

If desired, the doxygen documentation can be created with @p "make doc".

@section BuildingPackages Packages

To install %DarkHelp so the API can be used within your own C++ application, run @p "sudo dpkg -i darkhelp-*.deb" after having run @p "make package".

Now from within your application, you must @p "#include <DarkHelp.hpp>" and link against the following:
@li @p libdarkhelp.so
@li @p libdarknet.so
@li OpenCV's libraries


*/
